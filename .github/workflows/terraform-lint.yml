name: Infrastructure Validation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-lint:
    name: Terraform Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive ./terraform

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init

      - name: Create TFLint Config
        run: |
          cat > ./terraform/.tflint.hcl <<EOF
          plugin "terraform" {
            enabled = true
            preset  = "recommended"
          }
          EOF

      - name: Run TFLint
        working-directory: ./terraform
        run: tflint

      - name: Generate Terraform Docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: ./terraform
          output-file: README.md
          output-method: inject
          git-push: false

  packer-lint:
    name: Packer Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "1.9.4"

      - name: Init Packer
        run: packer init ./packer
        
      - name: Format Check Packer Templates
        run: packer fmt -check ./packer

      - name: Validate Packer Templates
        run: packer validate ./packer

  security-checks:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./
          framework: terraform
          skip_check: CKV_AWS_,CKV_GCP_,CKV_AZURE_

      - name: Install and Run pre-commit
        run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files
